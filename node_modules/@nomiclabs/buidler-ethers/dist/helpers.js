"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugins_1 = require("@nomiclabs/buidler/plugins");
async function getSigners(bre) {
    const accounts = await bre.ethers.provider.listAccounts();
    return accounts.map((account) => bre.ethers.provider.getSigner(account));
}
exports.getSigners = getSigners;
async function getContractFactory(bre, nameOrAbi, bytecodeOrSigner, signer) {
    if (typeof nameOrAbi === "string") {
        return getContractFactoryByName(bre, nameOrAbi, bytecodeOrSigner);
    }
    return getContractFactoryByAbiAndBytecode(bre, nameOrAbi, bytecodeOrSigner, signer);
}
exports.getContractFactory = getContractFactory;
async function getContractFactoryByName(bre, name, signer) {
    if (signer === undefined) {
        const signers = await bre.ethers.signers();
        signer = signers[0];
    }
    const artifact = await plugins_1.readArtifact(bre.config.paths.artifacts, name);
    const bytecode = artifact.bytecode;
    return new bre.ethers.ContractFactory(artifact.abi, bytecode, signer);
}
exports.getContractFactoryByName = getContractFactoryByName;
async function getContractFactoryByAbiAndBytecode(bre, abi, bytecode, signer) {
    if (signer === undefined) {
        const signers = await bre.ethers.signers();
        signer = signers[0];
    }
    return new bre.ethers.ContractFactory(abi, bytecode, signer);
}
exports.getContractFactoryByAbiAndBytecode = getContractFactoryByAbiAndBytecode;
async function getContractAt(bre, nameOrAbi, address, signer) {
    if (typeof nameOrAbi === "string") {
        const factory = await getContractFactoryByName(bre, nameOrAbi, signer);
        return factory.attach(address);
    }
    if (signer === undefined) {
        const signers = await bre.ethers.signers();
        signer = signers[0];
    }
    return new bre.ethers.Contract(address, nameOrAbi, signer);
}
exports.getContractAt = getContractAt;
//# sourceMappingURL=helpers.js.map